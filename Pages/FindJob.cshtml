@page
@model FindJobModel
@{
    ViewData["Title"] = "Find Job";
}

<!doctype html>
<html class="no-js" lang="zxx">
<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>@ViewData["Title"] - JobFinder</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <link rel="shortcut icon" type="image/x-icon" href="~/assets/img/favicon.ico">

    <!-- CSS here -->
    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/owl.carousel.min.css">
    <link rel="stylesheet" href="~/assets/css/price_rangs.css">
    <link rel="stylesheet" href="~/assets/css/flaticon.css">
    <link rel="stylesheet" href="~/assets/css/slicknav.css">
    <link rel="stylesheet" href="~/assets/css/animate.min.css">
    <link rel="stylesheet" href="~/assets/css/magnific-popup.css">
    <link rel="stylesheet" href="~/assets/css/fontawesome-all.min.css">
    <link rel="stylesheet" href="~/assets/css/themify-icons.css">
    <link rel="stylesheet" href="~/assets/css/slick.css">
    <link rel="stylesheet" href="~/assets/css/nice-select.css">
    <link rel="stylesheet" href="~/assets/css/style.css">

    <style>
        .slider {
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            background: #ddd;
            outline: none;
            opacity: 0.7;
            -webkit-transition: .2s;
            transition: opacity .2s;
        }

            .slider:hover {
                opacity: 1;
            }
    </style>

</head>
<body>
    <main>

        <!-- Hero Area Start-->
        <div class="slider-area ">
            <div class="single-slider section-overly slider-height2 d-flex align-items-center" data-background="assets/img/hero/about.jpg">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap text-center">
                                <h2>Get your job</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Hero Area End -->
        <!-- Job List Area Start -->
        <div class="job-listing-area pt-120 pb-120">
            <div class="container">
                <div class="row">
                    <!-- Left content -->
                    <div class="col-xl-3 col-lg-3 col-md-4">
                        <div class="row">
                            <div class="col-12">
                                <div class="small-section-tittle2 mb-45">
                                    <div class="ion">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             xmlns:xlink="http://www.w3.org/1999/xlink"
                                             width="20px" height="12px">
                                            <path fill-rule="evenodd" fill="rgb(27, 207, 107)"
                                                  d="M7.778,12.000 L12.222,12.000 L12.222,10.000 L7.778,10.000 L7.778,12.000 ZM-0.000,-0.000 L-0.000,2.000 L20.000,2.000 L20.000,-0.000 L-0.000,-0.000 ZM3.333,7.000 L16.667,7.000 L16.667,5.000 L3.333,5.000 L3.333,7.000 Z" />
                                        </svg>
                                    </div>
                                    <h4>Filter Jobs</h4>
                                </div>
                            </div>
                        </div>
                        <!-- Job Category Listing start -->
                        <form id="jobFilterForm" method="get" action="/FindJob">
                        <div class="job-category-listing mb-50">
                            <!-- single one -->
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4>Job Type</h4>
                                </div>
                                    <!-- Select job items start -->
                                    <div class="select-job-items2">
                                        <select id="JobTypeId" name="JobTypeId">
                                            <option value="">All Job Types</option>
                                            @foreach (var jt in Model.JobTypes)
                                            {
                                                if (Model.JobTypeId == jt.Id)
                                                {
                                                    <option value="@jt.Id" selected>@jt.JobTypeName</option>
                                                }
                                                else
                                                {
                                                    <option value="@jt.Id">@jt.JobTypeName</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                    <!-- Select job items End -->
                                    <!-- select-Categories start -->
                                    <div class="select-Categories pt-80 pb-50">
                                        <div class="small-section-tittle2">
                                            <h4>Job Nature</h4>
                                        </div>
                                        <label class="container">
                                            Full Time
                                            <input type="checkbox" name="JobTypeFilter" value="Full Time"
                                            @(Model.JobTypeFilter != null && Model.JobTypeFilter.Contains("Full Time") ? "checked=\"checked\"" : "")>
                                            <span class="checkmark"></span>
                                        </label>

                                        <label class="container">
                                            Part Time
                                            <input type="checkbox" name="JobTypeFilter" value="Part Time"
                                            @(Model.JobTypeFilter != null && Model.JobTypeFilter.Contains("Part Time") ? "checked=\"checked\"" : "")>
                                            <span class="checkmark"></span>
                                        </label>

                                        <label class="container">
                                            Remote
                                            <input type="checkbox" name="JobTypeFilter" value="Remote"
                                            @(Model.JobTypeFilter != null && Model.JobTypeFilter.Contains("Remote") ? "checked=\"checked\"" : "")>
                                            <span class="checkmark"></span>
                                        </label>

                                        <label class="container">
                                            Freelance
                                            <input type="checkbox" name="JobTypeFilter" value="Freelance"
                                            @(Model.JobTypeFilter != null && Model.JobTypeFilter.Contains("Freelance") ? "checked=\"checked\"" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                    </div>
                                    <!-- select-Categories End -->
                                
                            </div>
                            <!-- single two -->
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4>Job Location</h4>
                                </div>
                                <!-- Select job items start -->
                                    <div class="form-group">
                                        <label for="province">Province/City</label>
                                        <select id="province" class="form-control">
                                            <option value="">Select a province/city</option>
                                        </select>
                                    </div>

                                    <div class="form-group">
                                        <label for="district">District</label>
                                        <select id="district" name="district" class="form-control">
                                            <option value="">Select a district</option>
                                        </select>
                                    </div>
                                    <!-- Hidden field to store the concatenated full address -->
                                    <input type="hidden" id="fullAddress" name="fullAddress" />
                                <!--  Select job items End-->
                                <!-- select-Categories start -->
                                <div class="select-Categories pt-80 pb-50">
                                    <div class="small-section-tittle2">
                                        <h4>Experience</h4>
                                    </div>
                                    <label class="container">
                                        1-2 Years
                                        <input type="checkbox" name="ExperienceFilter" value="1-2"
                                            @(Model.ExperienceFilter != null && Model.ExperienceFilter.Contains("1-2") ? "checked=\"checked\"" : "")>
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        2-3 Years
                                        <input type="checkbox" name="ExperienceFilter" value="2-3"
                                            @(Model.ExperienceFilter != null && Model.ExperienceFilter.Contains("2-3") ? "checked=\"checked\"" : "")>
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        3-6 Years
                                        <input type="checkbox" name="ExperienceFilter" value="3-6"
                                            @(Model.ExperienceFilter != null && Model.ExperienceFilter.Contains("3-6") ? "checked=\"checked\"" : "")>
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="container">
                                        6+ Years
                                        <input type="checkbox" name="ExperienceFilter" value="6-more"
                                            @(Model.ExperienceFilter != null && Model.ExperienceFilter.Contains("6-more") ? "checked=\"checked\"" : "")>
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <!-- select-Categories End -->
                            </div>
                            <!-- single three -->
                            <div class="single-listing">
                                    <!-- select-Categories start -->
                                    <div class="select-Categories pb-50">
                                        <div class="small-section-tittle2">
                                            <h4>Posted Within</h4>
                                        </div>
                                        <label class="container">
                                            Any
                                            <input type="radio" name="postedWithin" value="0" @(Model.postedWithin == 0 ? "checked" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="container">
                                            Today
                                            <input type="radio" name="postedWithin" value="1" @(Model.postedWithin == 1 ? "checked" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="container">
                                            Last 2 days
                                            <input type="radio" name="postedWithin" value="2" @(Model.postedWithin == 2 ? "checked" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="container">
                                            Last 3 days
                                            <input type="radio" name="postedWithin" value="3" @(Model.postedWithin == 3 ? "checked" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="container">
                                            Last 5 days
                                            <input type="radio" name="postedWithin" value="5" @(Model.postedWithin == 5 ? "checked" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                        <label class="container">
                                            Last 10 days
                                            <input type="radio" name="postedWithin" value="10" @(Model.postedWithin == 10 ? "checked" : "")>
                                            <span class="checkmark"></span>
                                        </label>
                                    </div>
                                    <!-- select-Categories End -->

                            </div>
                            <div class="single-listing">
                                    <!-- Range Slider Start -->
                                    <aside class="left_widgets p_filter_widgets price_rangs_aside sidebar_box_shadow">
                                        <div class="small-section-tittle2">
                                            <h4>Filter Jobs by Salary</h4>
                                        </div>
                                        <div class="widgets_inner">
                                            <div class="range_item">
                                                <div class="d-flex align-items-center">
                                                    <div class="price_text">
                                                        <p>Salary:</p>
                                                    </div>
                                                </div>
                                                <!-- Slider -->
                                                <div class="price_range">
                                                    <input type="range" min="0" max="50000000" value="@(Model.MinSalary > 0 ? Model.MinSalary : 0)" class="slider" id="minPrice" name="MinSalary" oninput="updateMinValue(this.value)">
                                                    <input type="range" min="0" max="50000000" value="@(Model.MaxSalary > 0 ? Model.MaxSalary : 50000000)" class="slider" id="maxPrice" name="MaxSalary" oninput="updateMaxValue(this.value)">
                                                </div>
                                                <p>₫<span id="minValue">@(Model.MinSalary > 0 ? Model.MinSalary : 0)</span> - ₫<span id="maxValue">@(Model.MaxSalary > 0 ? Model.MaxSalary : 50000000)</span></p>
                                            </div>
                                        </div>                                      
                                    </aside>
                                    <!-- Range Slider End -->

                                    <br />
                                    <button style="background-color: #ff4357; 
                                            color: white;
                                            display: block;
                                            border: 1px solid #ff4357;
                                            border-radius: 30px;
                                            padding: 4px 33px;
                                            text-align: center;
                                            margin-bottom: 25px;" 
                                            class="@* border-btn2 *@" type="submit">
                                            Filter Jobs
                                    </button>
                            </div>
                        </div>
                        </form>
                        <!-- Job Category Listing End -->
                    </div>
                    <!-- Right content -->
                    <div class="col-xl-9 col-lg-9 col-md-8">
                        <!-- Featured_job_start -->
                        <section class="featured-job-area">
                            <div class="container">
                                <!-- Count of Job list Start -->
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="count-job mb-35">
                                            <span>@Model.JobPostings.TotalRecords Jobs found</span>
                                            <!-- Select job items start -->
                                           @*  <div class="select-job-items">
                                                <span>Sort by</span>
                                                <select name="select">
                                                    <option value="">None</option>
                                                    <option value="">job list</option>
                                                    <option value="">job list</option>
                                                    <option value="">job list</option>
                                                </select>
                                            </div> *@
                                            <!--  Select job items End-->
                                        </div>
                                    </div>
                                </div>
                                <!-- Count of Job list End -->
                                <!-- single-job-content -->
                                @foreach (var job in Model.JobPostings.Data)
                                {
                                    <div class="single-job-items mb-30" style="padding: 15px;">
                                        <div class="job-items d-flex align-items-center">
                                            <div class="company-img">
                                                <a href="#">
                                                    <img src="@job.Recruiter.CompanyImage" alt="@job.JobTitle" style="width: 80px; height: 80px;">
                                                </a>
                                            </div>
                                            <div class="job-tittle job-tittle2" style="margin-left: 15px;">
                                                <a href="/FindJobDetail?Id=@job.Id">
                                                    <h4>@job.JobTitle</h4>
                                                </a>
                                                <ul class="d-flex align-items-center" style="list-style-type: none; padding-left: 0; margin-top: 5px;">
                                                    <li style="margin-right: 20px;">@job.Recruiter.CompanyName</li>
                                                    <li style="margin-right: 20px;">
                                                        <i class="fas fa-map-marker-alt"></i> @job.JobLocation
                                                    </li>
                                                    <li>@job.Salary đ</li>
                                                </ul>
                                            </div>
                                            <div class="items-link f-right" style="margin-left: auto;">
                                                <a href="/FindJobDetail?Id=@job.Id" >
                                                    @job.JobNature.JobNatureName
                                                </a>
                                                <span style="display: block; margin-top: 5px;">@job.PostDate.ToString("dd/MM/yyyy")</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <!-- single-job-content 
                                <div class="single-job-items mb-30">
                                    <div class="job-items">
                                        <div class="company-img">
                                            <a href="#"><img src="assets/img/icon/job-list4.png" alt=""></a>
                                        </div>
                                        <div class="job-tittle job-tittle2">
                                            <a href="#">
                                                <h4>Digital Marketer</h4>
                                            </a>
                                            <ul>
                                                <li>Creative Agency</li>
                                                <li><i class="fas fa-map-marker-alt"></i>Athens, Greece</li>
                                                <li>$3500 - $4000</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="items-link items-link2 f-right">
                                        <a href="/FindJobDetail">Full Time</a>
                                        <span>7 hours ago</span>
                                    </div>
                                </div>-->
                            </div>
                        </section>
                        <!-- Featured_job_end -->
                    </div>
                </div>
            </div>
        </div>
        <!-- Job List Area End -->
        <!-- Pagination Start -->
        <div class="pagination-area pb-115 text-center">
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                        <div class="single-wrap d-flex justify-content-center">
                            <nav aria-label="Page navigation example">
                                <ul class="pagination justify-content-start">
                                    @for (int i = 1; i <= Model.JobPostings.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == Model.JobPostings.PageNumber ? "active" : "")">
                                            <a class="page-link" href="?PageNumber=@i">@i.ToString("D2")</a>
                                        </li>
                                    }
                                    <li class="page-item">
                                        <a class="page-link" href="?PageNumber=@(Model.JobPostings.PageNumber + 1)">
                                            <span class="ti-angle-right"></span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pagination End -->

    </main>

    <!-- JS here -->
    <script>
        var minSlider = document.getElementById("minPrice");
        var maxSlider = document.getElementById("maxPrice");
        var minValue = document.getElementById("minValue");
        var maxValue = document.getElementById("maxValue");

        minSlider.oninput = function () {
            minValue.innerHTML = new Intl.NumberFormat().format(this.value);
        }

        maxSlider.oninput = function () {
            maxValue.innerHTML = new Intl.NumberFormat().format(this.value);
        }

        function updateMinValue(value) {
            document.getElementById('minValue').innerText = new Intl.NumberFormat('vi-VN').format(value);
        }

        function updateMaxValue(value) {
            document.getElementById('maxValue').innerText = new Intl.NumberFormat('vi-VN').format(value);
        }

        async function fetchProvinces() {
            try {
                const response = await fetch("https://provinces.open-api.vn/api/p/");
                const provinces = await response.json();

                console.log(provinces); // Log the fetched provinces to check the data

                const provinceSelect = document.getElementById("province");
                provinceSelect.innerHTML = ''; // Clear previous options

                // Ensure the first option is a prompt for selection
                const defaultOption = document.createElement("option");
                console.log(12, provinceSelect);
                defaultOption.value = "";
                defaultOption.textContent = "Select a province/city";
                provinceSelect.appendChild(defaultOption);

                // Check if provinces exist
                if (Array.isArray(provinces) && provinces.length > 0) {
                    provinces.forEach(province => {
                        const option = document.createElement("option");
                        option.value = province.code; // Assign province code as the value
                        option.textContent = province.name; // Assign province name as the display text
                        provinceSelect.appendChild(option); // Append option to the dropdown
                    });
                } else {
                    console.log("No provinces found."); // Log if no provinces are found
                }
            } catch (error) {
                console.error("Error fetching provinces:", error); // Log any errors
            }

        }



        async function fetchDistricts(provinceCode) {
            const response = await fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`);
            const provinceData = await response.json();

            console.log(provinceData); // Add this line to log the response

            const districtSelect = document.getElementById("district");
            districtSelect.innerHTML = '<option value="">Select a district</option>'; // Reset district options

            // Check if districts exist
            if (provinceData.districts && provinceData.districts.length > 0) {
                provinceData.districts.forEach(district => {
                    const option = document.createElement("option");
                    option.value = district.name; // Use name for concatenation later
                    option.textContent = district.name;
                    districtSelect.appendChild(option);
                });
            } else {
                console.log("No districts found for this province."); // Log message for no districts
            }
        }

        // Event listener for province selection change
        document.getElementById("province").addEventListener("change", function () {
            const provinceCode = this.value;
            if (provinceCode) {
                fetchDistricts(provinceCode);
            } else {
                document.getElementById("district").innerHTML = '<option value="">Select a district</option>'; // Reset district options
            }
        });

        // Concatenate full address when the form is submitted
        document.getElementById('jobFilterForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent actual form submission

            const district = document.getElementById('district').value;
            const province = document.getElementById('province').options[document.getElementById('province').selectedIndex].text;

            if (district && province) {
                const fullAddress = `${district}, ${province}`;
                document.getElementById('fullAddress').value = fullAddress;

                console.log('Full Address:', fullAddress);

                // Now you can submit the form or send data via an API call
                this.submit(); // Submit form after setting fullAddress
            } else {
                const fullAddress = null;
                document.getElementById('fullAddress').value = fullAddress;
                this.submit();
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            fetchProvinces(); // Fetch provinces once the DOM is fully loaded
        });
    </script>


    <!-- All JS Custom Plugins Link Here here -->
    <script src="~/assets/js/vendor/modernizr-3.5.0.min.js"></script>
    <script src="~/assets/js/vendor/jquery-1.12.4.min.js"></script>
    <script src="~/assets/js/popper.min.js"></script>
    <script src="~/assets/js/bootstrap.min.js"></script>
    <script src="~/assets/js/jquery.slicknav.min.js"></script>
    <script src="~/assets/js/owl.carousel.min.js"></script>
    <script src="~/assets/js/slick.min.js"></script>
    <script src="~/assets/js/price_rangs.js"></script> 
    <script src="~/assets/js/wow.min.js"></script>
    <script src="~/assets/js/animated.headline.js"></script>
    <script src="~/assets/js/jquery.magnific-popup.js"></script>
    <script src="~/assets/js/jquery.scrollUp.min.js"></script>
    <script src="~/assets/js/jquery.nice-select.min.js"></script>
    <script src="~/assets/js/jquery.sticky.js"></script>
    <script src="~/assets/js/contact.js"></script>
    <script src="~/assets/js/jquery.form.js"></script>
    <script src="~/assets/js/jquery.validate.min.js"></script>
    <script src="~/assets/js/mail-script.js"></script>
    <script src="~/assets/js/jquery.ajaxchimp.min.js"></script>
    <script src="~/assets/js/plugins.js"></script>
    <script src="~/assets/js/main.js"></script>

</body>
</html>
